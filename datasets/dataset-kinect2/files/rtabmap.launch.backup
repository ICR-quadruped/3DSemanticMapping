<launch>
	<!-- ROBOT MAPPING VERSION: use this with ROS bag demo_mapping.bag -->
	<!-- WARNING : Database is automatically deleted on each startup -->
	<!--           See "delete_db_on_start" option below... -->

	<!-- Choose visualization -->
	<arg name="rviz" default="false" />
	<arg name="rtabmapviz" default="false" /> 
	
	<param name="use_sim_time" type="bool" value="True"/>
	
	<!-- Localization-only mode -->
	<arg name="localization"      default="false"/>
	<arg     if="$(arg localization)" name="rtabmap_args"  default=""/>
	<arg unless="$(arg localization)" name="rtabmap_args"  default="--delete_db_on_start"/>

	<group ns="rtabmap">
		<!-- SLAM (robot side) -->
		<!-- args: "delete_db_on_start" and "udebug" -->
		<node name="rtabmap" pkg="rtabmap_ros" type="rtabmap" output="screen" args="$(arg rtabmap_args)">
			<param name="frame_id"           type="string" value="base_link"/>
			<param name="wait_for_transform" type="bool" value="true"/>
			
			<param name="subscribe_depth" type="bool" value="true"/>
			<param name="subscribe_scan"  type="bool" value="true"/>
			
			<!-- As /az3/base_controller/odom topic doesn't provide covariances, we use TF to get odom and we fix the covariance -->
			<param name="odom_frame_id"            type="string" value="odom"/>
			<!--<param name="odom_tf_linear_variance"  type="double" value="0.001"/>
			<param name="odom_tf_angular_variance" type="double" value="0.001"/>-->

			<remap from="scan" to="/scan"/>
			<remap from="rgb/image"       to="/camera/rgb/image_raw"/>
			<remap from="depth/image"     to="/camera/depth/image_raw"/>
			<remap from="rgb/camera_info" to="/kinect2/qhd/camera_info"/>
			
			<param name="rgb/image_transport"   type="string" value="raw"/>
			<param name="depth/image_transport" type="string" value="raw"/>
			
			<!-- RTAB-Map's parameters: do "rosrun rtabmap rtabmap (double-dash)params" to see the list of available parameters. -->
			<param name="RGBD/NeighborLinkRefining" type="string" value="true"/>  <!-- Do odometry correction with consecutive laser scans -->
			<param name="RGBD/ProximityBySpace"     type="string" value="true"/>  <!-- Local loop closure detection (using estimated position) with locations in WM -->
			<param name="RGBD/ProximityByTime"      type="string" value="false"/> <!-- Local loop closure detection with locations in STM -->
			<param name="RGBD/ProximityPathMaxNeighbors" type="string" value="0"/> <!-- Do also proximity detection by space by merging close scans together. -->
			<param name="Reg/Strategy"              type="string" value="2"/>   <!-- 0=Visual, 1=ICP, 2=Visual+ICP -->
			<param name="Vis/MinInliers"        type="string" value="7"/>   <!-- 3D visual words correspondence distance -->
			<param name="RGBD/OptimizeFromGraphEnd" type="string" value="false"/> <!-- Optimize graph from initial node so /map -> /odom transform will be generated -->
			<param name="RGBD/OptimizeMaxError"     type="string" value="200"/>	<!-- Reject any loop closure causing large errors (>2x link's covariance) in the map -->
			<param name="Reg/Force3DoF"             type="string" value="true"/>  <!-- 2D SLAM -->
			<param name="Grid/FromDepth"            type="string" value="false"/> <!-- Create 2D occupancy grid from laser scan -->
			<param name="Mem/STMSize"               type="string" value="10"/>    <!-- increased to 30 to avoid adding too many loop closures on just seen locations -->
			<param name="RGBD/LocalRadius"          type="string" value="30"/>     <!-- limit length of proximity detections -->
			<param name="RGBD/LocalBundleOnLoopClosure"   type="string" value="true"/>     <!-- limit length of proximity detections -->
			<param name="Optimizer/Slam2D" value="true"/>

			<!-- <param name="RGBD/ProximityMaxGraphDepth" value="500"/>	    -->
			<!-- <param name="RGBD/OptimizeStrategy" type="string" value="2"/>  -->
			<!-- <param name="RGBD/OptimizeRobust" type="string" value="true"/> -->
			
			<param name="Rtabmap/LoopThr"          type="string" value="0.11"/>     
			<param name="Icp/CorrespondenceRatio"          type="string" value="0.02"/>     
			<param name="Icp/MaxRotation"          type="string" value="1.4"/>     

			<!-- localization mode -->
			<param     if="$(arg localization)" name="Mem/IncrementalMemory" type="string" value="false"/>
			<param unless="$(arg localization)" name="Mem/IncrementalMemory" type="string" value="true"/>
			<param name="Mem/InitWMWithAllNodes" type="string" value="$(arg localization)"/>
		</node>
  	</group>
</launch>
